
////////////////////
Licensed to Cloudera, Inc. under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  Cloudera, Inc. licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
////////////////////

== Versions

=== history

v0.9.2 11/15/10:: Support for all Hadoop supported compression codecs.
Avro RPC support.  Flexible throughput throttling.  Useful error
messages in shell. Upgrades to Thrift RPC support.  Performance and
robustness improvements in tail and exec.

v0.9.1u1 10/12/10:: Added write support for Kerberized HDFS. Flume
cookbook.

v0.9.1 8/9/10:: Improved error messages and visibility of property
configuration values.  First external contributions.  Fixed
reconfiguration hangs.  Improved implementing plugins documentation.
Updated scribe and syslog support.  Compression on output files.

v0.9 6/29/10 :: metrics and reporting framework, logical nodes+logical
names abstraction, wal/dfo isolation by flow, transformation-based
high level sinks.  Open source and initial push to github.

v0.3 3/31/10 :: ZK based master/multi-master, automatic failovers for
data and control planes.  flume shell. deb/rpm packaging.

v0.2 1/21/09 :: Different reliability modes: WAL 2.0, DFO, Best
effort. Output file escaping/bucketing.  Proliferation of many sink
and decorators.

v0.1 11/23/09 :: First installation deployment, users tests.

v0.0 9/21/09 :: First cut with current architecture (centralized
master, configuration language, web interface.)  First version of WAL.
Simple visualizations, samplers, thrift based rpc.

pre history 7/21/09 :: First commit.  design, experimental
implementations.  Initial implementation had individual agent and
collector programs, watchdog



