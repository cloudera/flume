<?xml version="1.0"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!--
Before you can run these subtargets directly, you need
to call at top-level: ant deploy-contrib compile-core-test
-->
<project name="flume" default="docs" xmlns:ivy="antlib:org.apache.ivy.ant">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="${basedir}/libbuild/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>
  <property name="name" value="flume"/>
  <property name="version.major" value="0"/>
  <property name="version.minor" value="9"/>
  <property name="version.rev" value="4"/>
  <property name="version.numbers" value="${version.major}.${version.minor}.${version.rev}"/>
  <property name="version" value="${version.numbers}-SNAPSHOT"/>
  <property name="final.name" value="${name}-${version}"/>
  <property name="year" value="2009-2011"/>

  <property name="build.docs" value="${basedir}/target/docs" />
  <property name="build.javadoc" value="${build.docs}/api" />

  <property environment="env"/>
  <property name="docs.dir" value="${basedir}/target/docs/"/>
  <property name="src.dir" value="${basedir}/src/"/>
  <property name="docs.src.dir" value="${src.dir}/docs"/>


  <!-- javadoc properties  -->
  <property name="javadoc.link.java" value="http://java.sun.com/j2se/1.6.0/docs/api/" />

  <!-- version info filters set -->
  <tstamp>
    <format property="year" pattern="yyyy" locale="en"/>
  </tstamp>

  <!-- ================================================================== -->
  <!-- Make Docs (UserGuide, Cookbook, DeveloperGuide)                    -->
  <!--  converts to docbook and then to html to avoid GPL code insertion  -->
  <!--  in ubuntu requires pkgs: asciidoc,source-highlight,graphviz       -->
  <!-- ================================================================== -->
  <target name="docs" depends="userguide,cookbook,developerguide,windowsguide,docindex" description="Build documentation"/>

  <uptodate property="userguide.uptodate"
	    targetfile="${build.docs}/UserGuide/index.html">
    <srcfiles dir="${docs.src.dir}/UserGuide" includes="*"/>
    <srcfiles dir="${docs.src.dir}/web" includes="*"/>
  </uptodate>
  <uptodate property="cookbook.uptodate"
	    targetfile="${build.docs}/Cookbook/index.html" >
    <srcfiles dir="${docs.src.dir}/cookbook" includes="*"/>
    <srcfiles dir="${docs.src.dir}/web" includes="*"/>
  </uptodate>
  <uptodate property="developerguide.uptodate"
	    targetfile="${build.docs}/DeveloperGuide/index.html" >
    <srcfiles dir="${docs.src.dir}/DeveloperGuide" includes="*"/>
    <srcfiles dir="${docs.src.dir}/web" includes="*"/>
  </uptodate>
  <uptodate property="windowsguide.uptodate"
	    targetfile="${build.docs}/Windows/index.html" >
    <srcfiles dir="${docs.src.dir}/Windows" includes="*"/>
    <srcfiles dir="${docs.src.dir}/web" includes="*"/>
  </uptodate>
  <uptodate property="docindex.uptodate"
	    targetfile="${build.docs}/index.html" >
    <srcfiles dir="${docs.src.dir}/web" includes="*"/>
  </uptodate>

  <target name="userguide" description="Build UserGuide" unless="userguide.uptodate" >
    <mkdir dir="${build.docs}/UserGuide"/>

    <exec executable="asciidoc" dir="${basedir}" failonerror="true">
      <arg line="-a revnumber=${version} -a revdate='${TODAY}' -b docbook -o ${build.docs}/UserGuide/index.xml ${docs.src.dir}/UserGuide/FullGuide"/>
    </exec>

    <exec executable="xmlto" dir="${basedir}" failonerror="true">
      <arg line="--skip-validation -o ${build.docs}/UserGuide -m src/docs/web/html.xsl html-nochunks ${build.docs}/UserGuide/index.xml "/>
    </exec>

    <delete file="${build.docs}/UserGuide/index.xml" />

    <copy todir="${docs.dir}/UserGuide">
      <fileset dir="${docs.src.dir}/web" includes="**"/>
    </copy>

    <copy todir="${docs.dir}/UserGuide">
      <fileset dir="${docs.src.dir}/UserGuide" includes="**/*.png"/>
    </copy>
  </target>

  <target name="cookbook" description="Build documentation" unless="cookbook.uptodate">
    <mkdir dir="${build.docs}/Cookbook"/>

    <exec executable="asciidoc" dir="${basedir}" failonerror="true">
      <arg line="-a revnumber=${version}  -a revdate='${TODAY}'  -b docbook -o ${build.docs}/Cookbook/index.xml ${docs.src.dir}/cookbook/Cookbook"/>
    </exec>

    <exec executable="xmlto" dir="${basedir}" failonerror="true">
      <arg line="--skip-validation -o ${build.docs}/Cookbook -m src/docs/web/html.xsl html-nochunks ${build.docs}/Cookbook/index.xml "/>
    </exec>

    <delete file="${build.docs}/cookbook/index.xml" />

    <copy todir="${docs.dir}/Cookbook">
      <fileset dir="${docs.src.dir}/web" includes="**"/>
    </copy>

    <copy todir="${docs.dir}/Cookbook">
      <fileset dir="${docs.src.dir}/cookbook" includes="**/*.png"/>
    </copy>
  </target>

  <target name="developerguide" description="Build DeveloperGuide" unless="developerguide.uptodate">
    <mkdir dir="${build.docs}/DeveloperGuide"/>

    <exec executable="asciidoc" dir="${basedir}" failonerror="true">
      <arg line="-a revnumber=${version} -a revdate='${TODAY}' -b docbook -o ${build.docs}/DeveloperGuide/index.xml ${docs.src.dir}/DeveloperGuide/FullGuide"/>
    </exec>

    <exec executable="xmlto" dir="${basedir}" failonerror="true">
      <arg line="--skip-validation -o ${build.docs}/DeveloperGuide -m src/docs/web/html.xsl html-nochunks ${build.docs}/DeveloperGuide/index.xml "/>
    </exec>

    <delete file="${build.docs}/DeveloperGuide/index.xml" />

    <copy todir="${docs.dir}/DeveloperGuide">
      <fileset dir="${docs.src.dir}/web" includes="**"/>
    </copy>

    <copy todir="${docs.dir}/DeveloperGuide">
      <fileset dir="${docs.src.dir}/DeveloperGuide" includes="**/*.png"/>
    </copy>
  </target>


  <target name="windowsguide" description="Build Windows Guide" unless="windowsguide.uptodate">
    <mkdir dir="${build.docs}/Windows"/>

    <exec executable="asciidoc" dir="${basedir}" failonerror="true">
      <arg line="-a revnumber=${version} -a revdate='${TODAY}' -b docbook -o ${build.docs}/Windows/index.xml ${docs.src.dir}/Windows/Windows"/>
    </exec>

    <exec executable="xmlto" dir="${basedir}" failonerror="true">
      <arg line="--skip-validation -o ${build.docs}/Windows -m src/docs/web/html.xsl html-nochunks ${build.docs}/Windows/index.xml "/>
    </exec>

    <delete file="${build.docs}/Windows/index.xml" />

    <copy todir="${docs.dir}/Windows">
      <fileset dir="${docs.src.dir}/web" includes="**"/>
    </copy>

    <copy todir="${docs.dir}/Windows">
      <fileset dir="${docs.src.dir}/Windows" includes="**/*.png"/>
    </copy>
  </target>


  <target name="docindex" description="Build Index Page for docs" unless="docindex.uptodate">
    <mkdir dir="${build.docs}"/>

    <exec executable="asciidoc" dir="${basedir}" failonerror="true">
      <arg line="-a revnumber=${version} -a revdate='${TODAY}' -b docbook -o ${build.docs}/index.xml ${docs.src.dir}/web/index.txt"/>
    </exec>

    <exec executable="xmlto" dir="${basedir}" failonerror="true">
      <arg line="--skip-validation -o ${build.docs} -m src/docs/web/html.xsl html-nochunks ${build.docs}/index.xml "/>
    </exec>

    <delete file="${build.docs}/index.xml" />

    <!-- there are 4 copies of this.  super inefficient -->
    <copy todir="${docs.dir}">
      <fileset dir="${docs.src.dir}/web" includes="**"/>
    </copy>

  </target>

</project>
